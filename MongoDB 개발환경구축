[윈도우]
1. mongoDB Enterprise 버전 zip 파일 다운

2. 압축해제 폴더/bin 경로를 환경변수 Path에 추가

3. data폴더로 사용할 폴더 생성

3. mongodb 서버 데몬 실행
   - mongod --dbpath data폴더 경로

4. mongodb 클라이언트 데몬 실행
   - mongo
   
※ [collection명]의 [column명] value보다 큰 것을 찾아라
   db.[collection명].find({[column명]:{$gt:[value]}})   
   관련 공식문서
   https://docs.mongodb.com/manual/reference/operator/query/lt/#op._S_lt
   
※ 사용자 생성
   use admin
   db.createUser({user:"[사용자명]", pwd:"[비밀번호]", roles:[{role:"[권한(ex. readWrite]", db:"[db명]"]}

※ 인증모드 서버 설정
   mongod --dbpath data [폴더경로] --auth 

※ mongoDB 포트 27017

※ server 끄기
   db.shutdownServer()

-----------------------------------------------------------------------------------------------------------

mongodb replicate 설정

1. 디렉터리 생성 node1, node2, arbiter

2. replicate 작업을 할 용도로 서버 업로드
   mongod --dbpath ./node1 --port 27018 --replSet ReplicaSet
   mongod --dbpath ./node2 --port 27019 --replSet ReplicaSet
   mongod --dbpath ./node2 --port 27020 --replSet ReplicaSet
   
3. 새로운 콘솔로 27018 서버에 접속
   mongo 127.0.0.1:27018
   
4. 27019 서버를 secondary 서버로 추가
   rs.add("127.0.0.1:27019")
   
5. 27020 서버를 arbiter로 추가
   rs.add("127.0.0.1:27020", {arbiterOnly: true})
   
6. 27019서버로 콘솔 접속

7. 27019서버 콘솔에서 slaveOk 속성을 true로 변경
   db.slaveOk()
   
6. 27018서버에 접속한 콘솔에서 db 조작

7. 27019서버에 접속한 콘솔에서 조작된 db상태 확인

8. 27018서버 shutdown

9. 27019서버에 재접속하여 주서버로 변경되었는지 확인

10. 27018서버 업로드
    mongod --dbpath ./node1 --port 27018 --replSet ReplicaSet
    
11. 27019서버(primary) 콘솔에서 rs.status()로 정보확인

12. 27019서버 콘솔에서 27018서버 예비서버목록에서 제거
    rs.remove("localhost:27018") // 127.0.0.1이 안 돼서 localhost로 사용
    
13. rs.status()로 제거한 거 확인
